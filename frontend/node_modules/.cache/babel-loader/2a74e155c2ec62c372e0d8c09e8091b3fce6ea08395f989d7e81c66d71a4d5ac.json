{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// app.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, useLocation } from 'react-router-dom';\nimport Routes from './routes';\nimport Navbar from './Navbar'; // Import Navbar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const location = useLocation();\n\n  // Check if current route is the Login page\n  const isLoginPage = location.pathname === '/login';\n\n  // Render Navbar only if not on the Login page\n  const renderNavbar = !isLoginPage && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [renderNavbar, \" \", /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Switch","useLocation","Routes","Navbar","jsxDEV","_jsxDEV","App","_s","location","isLoginPage","pathname","renderNavbar","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// app.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, useLocation } from 'react-router-dom';\nimport Routes from './routes';\nimport Navbar from './Navbar'; // Import Navbar component\n\nfunction App() {\n  const location = useLocation();\n\n  // Check if current route is the Login page\n  const isLoginPage = location.pathname === '/login';\n\n  // Render Navbar only if not on the Login page\n  const renderNavbar = !isLoginPage && <Navbar />;\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {renderNavbar} {/* Conditionally render the Navbar */}\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMQ,WAAW,GAAGD,QAAQ,CAACE,QAAQ,KAAK,QAAQ;;EAElD;EACA,MAAMC,YAAY,GAAG,CAACF,WAAW,iBAAIJ,OAAA,CAACF,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE/C,oBACEV,OAAA,CAACP,MAAM;IAAAkB,QAAA,eACLX,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAD,QAAA,GACjBL,YAAY,EAAC,GAAC,eACfN,OAAA,CAACH,MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACR,EAAA,CAjBQD,GAAG;EAAA,QACOL,WAAW;AAAA;AAAAiB,EAAA,GADrBZ,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}